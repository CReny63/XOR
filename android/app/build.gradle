// Old/traditional plugin application
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
// Uncomment if you need Flutterâ€™s Gradle plugin explicitly:
// apply plugin: 'dev.flutter.flutter-gradle-plugin'

// Load local.properties for flutterVersionCode/flutterVersionName
def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

// If these aren't set, default to '1' and '1.0'
def flutterVersionCode = localProperties.getProperty("flutter.versionCode") ?: "1"
def flutterVersionName = localProperties.getProperty("flutter.versionName") ?: "1.0"

android {
    namespace = "com.example.meta_verse"
    compileSdk = 34

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.example.meta_verse"
        minSdk = 21
        targetSdk = 34

        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        
    }

    signingConfigs {
        release {
            // If your keystore is in the project root (two levels up from android/app):
            storeFile file("../../my-release-key.jks")

            // Update these with your actual credentials
            storePassword "Champreny31013"
            keyAlias "myKeyAlias"
            keyPassword "Champreny31013"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release

            shrinkResources true
            minifyEnabled true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                          'proguard-rules.pro'
        }
    }
}

dependencies {
    // Add any dependencies your Android module needs
}

// If you want to ensure Kotlin 1.8 compilation:
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

// (Optional) If you need the Flutter Gradle plugin to know where your Flutter code is:
// flutter {
//     source = "../.."
// }
